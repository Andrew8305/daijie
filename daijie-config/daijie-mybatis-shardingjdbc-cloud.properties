#服务名称
spring.application.name=daijie-db-cloud
#服务端口号
server.port=12810

#eureka注册中心地址
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/
#是否设置注册优些IP地址
eureka.instance.preferIpAddress=true

#启用默认执行超时
hystrix.command.default.execution.timeout.enabled=true
#开启重试机制
spring.cloud.loadbalancer.retry.enabled=true
#断路器的超时时间,断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 60000
#设置线程池大小
hystrix.threadpool.default.coreSize=100
#请求连接的超时时间
ribbon.ConnectTimeout=20000
#请求处理的超时时间
ribbon.ReadTimeout=1000
#对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
#对当前实例的重试次数
ribbon.MaxAutoRetries=1
#对下个实例的重试次数
ribbon.MaxAutoRetriesNextServer=2

#sharding-jdbc数据源,分表相关配置----------------------start
sharding.jdbc.datasource.names=demo

sharding.jdbc.datasource.demo.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.demo.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.demo.url=jdbc:mysql://localhost:3306/demo
sharding.jdbc.datasource.demo.username=root
sharding.jdbc.datasource.demo.password=123456

sharding.jdbc.config.sharding.tables.user.actual-data-nodes=demo.user_${0..1}
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${user_id % 2}
sharding.jdbc.config.sharding.tables.user.key-generator-column-name=user_id
#sharding-jdbc数据源,分表相关配置----------------------end

mybatis.typeAliasesPackage=org.daijie.mybatis.model
mybatis.mapperLocations=classpath:/mybatis-mapper/*.xml
mapper.mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.MySqlMapper,tk.mybatis.mapper.common.ConditionMapper

mapper.notEmpty=false
mapper.identity=MYSQL

#分页插件会自动检测当前的数据库链接，自动选择合适的分页方式
pagehelper.helperDialect=mysql
#默认值为 false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为 true 时，会将 RowBounds 中的 offset 参数当成 pageNum 使用，可以用页码和页面大小两个参数进行分页。
pagehelper.offsetAsPageNum=false
#分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询
pagehelper.reasonable=true
#支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
pagehelper.supportMethodsArguments=true
#为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
pagehelper.params=count=countSql

#指定Log4j打印日志包路径的日志级别
logging.level.org.daijie=DEBUG

#对象转json串时，去除为null的属性
spring.jackson.default-property-inclusion=non_null
#指定jackson日期转换格式
spring.jackson.date-format=yyyy-MM-dd HH\:mm\:ss
#指定jackson日期转换时区
spring.jackson.time-zone=Asia/Shanghai

#设置zipkin监控地址
spring.zipkin.baseUrl=http://127.0.0.1:12809
#开启zipkin监控
spring.zipkin.enabled=true