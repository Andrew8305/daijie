<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gwy.recodecenter.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.gwy.recodecenter.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="login_key" property="loginKey" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="BIT" />
    <result column="defriend" property="defriend" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email, mobile, nick_name, password, passwd, login_key, user_type, enable, defriend, 
    status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.gwy.recodecenter.model.User" >
    insert into user (id, email, mobile, nick_name, password, passwd, login_key, 
      user_type, enable, defriend, status)
    values (#{id}, #{email}, #{mobile}, #{nickName}, #{password}, #{passwd}, #{loginKey}, 
      #{userType}, #{enable}, #{defriend}, #{status})
  </insert>
  <insert id="insertSelective" parameterType="com.gwy.recodecenter.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="loginKey != null" >
        login_key,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="defriend != null" >
        defriend,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="email != null" >
        #{email},
      </if>
      <if test="mobile != null" >
        #{mobile},
      </if>
      <if test="nickName != null" >
        #{nickName},
      </if>
      <if test="password != null" >
        #{password},
      </if>
      <if test="passwd != null" >
        #{passwd},
      </if>
      <if test="loginKey != null" >
        #{loginKey},
      </if>
      <if test="userType != null" >
        #{userType},
      </if>
      <if test="enable != null" >
        #{enable},
      </if>
      <if test="defriend != null" >
        #{defriend},
      </if>
      <if test="status != null" >
        #{status},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gwy.recodecenter.model.User" >
    update user
    <set >
      <if test="email != null" >
        email = #{email},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName},
      </if>
      <if test="password != null" >
        password = #{password},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd},
      </if>
      <if test="loginKey != null" >
        login_key = #{loginKey},
      </if>
      <if test="userType != null" >
        user_type = #{userType},
      </if>
      <if test="enable != null" >
        enable = #{enable},
      </if>
      <if test="defriend != null" >
        defriend = #{defriend},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gwy.recodecenter.model.User" >
    update user
    set email = #{email},
      mobile = #{mobile},
      nick_name = #{nickName},
      password = #{password},
      passwd = #{passwd},
      login_key = #{loginKey},
      user_type = #{userType},
      enable = #{enable},
      defriend = #{defriend},
      status = #{status}
    where id = #{id}
  </update>
  <select id="selectByConditions" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where status=1
    ${_parameter}
  </select>
  <select id="selectCountByConditions" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select 
    COUNT(*)
    from user
    where status=1
    ${_parameter}
  </select>
  <update id="deleteLogicByConditions" parameterType="java.lang.String" >
    update user
    set status=0 
    where 1=1
    ${_parameter} 
  </update>
  <update id="deleteLogicByPrimaryKey" parameterType="java.lang.String" >
    update user
    set status=0 
    where id = #{id}
  </update>
  <update id="updateByConditionsSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id},
      </if>
      <if test="record.email != null" >
        email = #{record.email},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName},
      </if>
      <if test="record.password != null" >
        password = #{record.password},
      </if>
      <if test="record.passwd != null" >
        passwd = #{record.passwd},
      </if>
      <if test="record.loginKey != null" >
        login_key = #{record.loginKey},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable},
      </if>
      <if test="record.defriend != null" >
        defriend = #{record.defriend},
      </if>
      <if test="record.status != null" >
        status = #{record.status},
      </if>
    </set>
    where 1=1
    ${conditions}
  </update>
</mapper>